{"version":3,"sources":["components/LogIn/LogIn.js","components/Register/Register.js","redux/user/user.selector.js","redux/url/url.action.js","redux/url/url.selector.js","components/CreateUrl/CreateUrl.js","components/ExistingUrl/IndividualUrl/IndividualUrl.js","components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer.js","App.js","redux/user/user.action.js","redux/user/user.reducer.js","redux/url/url.reducer.js","redux/root-reducer.js","redux/store.js","AppGateway.js","serviceWorker.js","index.js"],"names":["LogIn","props","state","username","password","validationMessage","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","axios","method","url","data","toLowerCase","then","results","undefined","a","setUser","id","getUserUrls","setLogIn","asyncLogin","catch","err","console","error","loggedIn","className","type","placeholder","onChange","onClick","Component","Register","passconfirm","email","emailconfirm","unError","emailError","pwError","get","post","registered","setRegistered","selectUser","userState","selectUserLogInState","createSelector","selectUserName","selectUserId","userid","selectRegisteredState","selectMobileNavState","mobileNavOpen","setOriginalUrl","originalUrl","payload","setCreateError","errorMsg","selectUrl","urlState","selectAnonUrlSubmit","anonUrlSubmit","selectUrlError","urlError","selectAnonUrlReturn","anonUrlReturn","selectUserUrls","urls","selectUrlOwner","owner","selectOriginalUrl","selectCreateError","validationError","connect","dispatch","render","passCheck","RegExp","test","checkValidUrl","originalurl","IndividualUrl","urlproperties","navigator","clipboard","writeText","ExistingUrlContainer","map","i","key","setLoggedInState","setUserName","setUserId","setRegisteredState","setMobileNavState","setAnonUrlSubmit","setUrlError","setAnonUrlReturn","setUserUrls","paylaod","setUrlOwner","log","response","reverse","clickMobileNav","submitAnon","selectUserid","test-data","activeUserName","anonUrl","minDeviceWidth","maxDeviceWidth","alt","src","length","loggedOutContent","INITIAL_STATE","UserReducer","action","UrlReducer","persistConfig","storage","rootReducer","combineReducers","persistReducer","middlewares","thunk","push","logger","store","createStore","applyMiddleware","AppGateway","window","location","hash","noHash","substring","href","getRedirect","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2f846c78.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport './login.css'\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      validationMessage: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios({\n      method: 'post',\n      url: 'https://api.theoog.net/login',\n      data: {\n        username: this.state.username.toLowerCase(),\n        password: this.state.password\n      }\n    })\n      .then((results) => {\n        if (results.data[0] === undefined) {\n          this.setState({validationMessage: '**username or password is incorrect'})\n        } else if (results.data[0]) {\n          async function asyncLogin() {\n            await this.props.setUser(results.data[0].username, results.data[1].id)\n            await this.props.getUserUrls()\n            await this.props.setLogIn()\n          }\n          asyncLogin()\n        } else {\n          this.setState({validationMessage: '**incorrect username or password'})\n        }\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  render() {\n    if (this.props.loggedIn === false) {\n      return(\n        <div className=\"login-container\">\n          <form className=\"login-form-content\">\n            <input name=\"username\" type=\"text\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange}/>\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            <button onClick={this.handleSubmit}>log in</button>\n          </form>\n          <p className=\"unpw-validation-error\">{this.state.validationMessage}</p>\n        </div>\n      )\n    } else if (this.props.loggedIn === true) {\n      return(\n        <div className=\"logout-container\">\n          <button onClick={() => this.props.setLogIn()}>log out</button>\n        </div>\n      )\n    }\n  }\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './register.css'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      passconfirm: '',\n      email: '',\n      emailconfirm: '',\n      unError: '',\n      emailError: '',\n      pwError: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    axios.get(`https://api.theoog.net/getExistingUser/${this.state.username.toLowerCase()}`)\n      .then((results) => {\n        if (results.data[0] === undefined) {\n          if (this.state.password === this.state.passconfirm) {\n            if (this.state.email === this.state.emailconfirm) {\n              axios.post('https://api.theoog.net/register', {\n                username: this.state.username.toLowerCase(),\n                password: this.state.password,\n                email: this.state.email\n              })\n              .then((results) => {\n                this.props.setUser(results.data[0].username, results.data[0].id)\n                this.props.setLogIn()\n              })\n              .catch((err) => {\n                console.error(err)\n              })\n          } else {\n            this.setState({emailError: '**emails do not match'})\n            this.setState({pwError: ''})\n          }\n        } else {\n          this.setState({pwError: '**passwords do not match'})\n          this.setState({unError: ''})\n        }\n      } else {\n        this.setState({unError: `**sorry, ${this.state.username} is taken`})\n      }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n  }\n\n  render() {\n    if (this.props.registered === true) {\n      return (\n        <button className=\"register-button\" onClick={this.props.setRegistered}>register</button>\n      )\n    } else if (this.props.registered === false) {\n      return(\n        <div className=\"registration-form-container\">\n          <form className=\"registration-form-content\">\n            <h2>REGISTER</h2>\n            <input name=\"username\" type=\"text\" placeholder=\"desired username\" value={this.state.username} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.unError}</p>\n            <input name=\"email\" type=\"text\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange}/>\n            <input name=\"emailconfirm\" type=\"text\" placeholder=\"confirm email\" value={this.state.emailconfirm} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.emailError}</p>\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            <input name=\"passconfirm\" type=\"password\" placeholder=\"confirm password\" value={this.state.passconfirm} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.pwError}</p>\n            <div className=\"register-button-container\">\n              <button className=\"registration-button\" onClick={this.handleSubmit}>submit</button>\n              <button className=\"registration-button\" onClick={this.props.setRegistered}>cancel</button>\n            </div>\n          </form>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Register","import { createSelector } from 'reselect'\n\nconst selectUser = state => state.userState;\n\nexport const selectUserLogInState = createSelector(\n  [selectUser],\n  userState => userState.loggedIn\n);\n\nexport const selectUserName = createSelector(\n  [selectUser],\n  userState => userState.username\n);\n\nexport const selectUserId = createSelector(\n  [selectUser],\n  userState => userState.userid\n);\n\nexport const selectRegisteredState = createSelector(\n  [selectUser],\n  userState => userState.registered\n);\n\nexport const selectMobileNavState = createSelector(\n  [selectUser],\n  userState => userState.mobileNavOpen\n);","export const setAnonUrlSubmit = url => {\n  return {\n    type: 'SET_ANON_URL_SUBMIT',\n    payload: url\n  };\n};\n\nexport const setUrlError = errMsg => {\n  return {\n    type: 'SET_URL_ERROR',\n    payload: errMsg\n  };\n};\n\nexport const setAnonUrlReturn = url => {\n  return {\n    type: 'SET_ANON_URL_RETURN',\n    payload: url\n  };\n};\n\nexport const setUserUrls = urlList => {\n  return {\n    type: 'SET_USER_URLS',\n    paylaod: urlList\n  };\n};\n\nexport const setUrlOwner = ownerId => {\n  return {\n    type: 'SET_URL_OWNER',\n    payload: ownerId\n  };\n};\n\nexport const setOriginalUrl = originalUrl => {\n  return {\n    type: 'SET_ORIGINAL_URL',\n    payload: originalUrl\n  };\n};\n\nexport const setCreateError = errorMsg => {\n  return {\n    type: 'SET_CREATE_ERROR',\n    payload: errorMsg\n  };\n};","import { createSelector } from 'reselect'\n\nconst selectUrl = state => state.urlState;\n\nexport const selectAnonUrlSubmit = createSelector(\n  [selectUrl],\n  urlState => urlState.anonUrlSubmit\n);\n\nexport const selectUrlError = createSelector(\n  [selectUrl],\n  urlState => urlState.urlError\n)\n\nexport const selectAnonUrlReturn = createSelector(\n  [selectUrl],\n  urlState => urlState.anonUrlReturn\n);\n\nexport const selectUserUrls = createSelector(\n  [selectUrl],\n  urlState => urlState.urls\n);\n\nexport const selectUrlOwner = createSelector(\n  [selectUrl],\n  urlState => urlState.owner\n);\n\nexport const selectOriginalUrl = createSelector(\n  [selectUrl],\n  urlState => urlState.originalUrl\n);\n\nexport const selectCreateError = createSelector(\n  [selectUrl],\n  urlState => urlState.validationError\n);","import React from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { selectUserId } from '../../redux/user/user.selector'\nimport { setOriginalUrl, setCreateError } from '../../redux/url/url.action'\nimport { selectOriginalUrl, selectCreateError } from '../../redux/url/url.selector'\nimport './createurl.css'\n\nconst CreateUrl = (props) => {\n\n  const handleChange = (event) => {\n    props.setOriginalUrl(event.target.value)\n  }\n\n  const checkValidUrl = (url) => {\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\n    const passCheck = regex.test(url)\n    if (passCheck === true) {\n      return passCheck\n    } else {\n      return false\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (checkValidUrl(props.selectOriginalUrl)) {\n      axios.post('https://api.theoog.net/', {\n        owner: props.selectUserId,\n        originalurl: props.selectOriginalUrl\n      })\n      .then((results) => {\n        props.setCreateError('')\n        props.getUserUrls()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n    } else {\n      props.setCreateError('**invalid url, must use http or https')\n    }\n  }\n\n  return(\n    <div>\n    <div className=\"create-url-container\">\n      <form>\n      <input type=\"text\" name=\"originalurl\" placeholder=\"paste your url here, http or https required\" value={props.selectOriginalUrl} onChange={handleChange}/>\n      <button onClick={handleSubmit}>shorten</button>\n      </form>\n    </div>\n    <p className=\"create-url-error\">{props.selectCreateError}</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectUserId: selectUserId(state),\n    selectOriginalUrl: selectOriginalUrl(state),\n    selectCreateError: selectCreateError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setOriginalUrl: render => dispatch(setOriginalUrl(render)),\n    setCreateError: render => dispatch(setCreateError(render))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateUrl);","import React from 'react'\nimport './individualurl.css'\n\nconst IndividualUrl = ({ urlproperties }) => {\n  return(\n    <div className=\"individual-url\">\n      <div className=\"original-url-container\">\n        <p>original url: <em>{urlproperties.originalurl}</em></p>\n      </div>\n      <div className=\"short-url-container\">\n        <p>short url: <strong>theoog.net/#{urlproperties.id}</strong></p>\n        {/* <p>{urlproperties.urlnickname}</p> */}\n        <button className=\"copy-button\" onClick={() => navigator.clipboard.writeText(`theoog.net/#${urlproperties.id}`)}>copy to clipboard</button>\n      </div>\n    </div>\n  )\n}\n\nexport default IndividualUrl","import React from 'react'\nimport './existingurlcontainer.css'\nimport IndividualUrl from '../IndividualUrl/IndividualUrl.js'\n\nconst ExistingUrlContainer = ({ urls }) => {\n  return(\n    <div className=\"existing-url-container\">\n      {\n        urls.map((urlproperties, i) => <IndividualUrl key={i} urlproperties={urlproperties} />)\n      }\n    </div>\n  )\n}\n\nexport default ExistingUrlContainer","import React from 'react'\nimport LogIn from './components/LogIn/LogIn'\nimport Register from './components/Register/Register'\nimport CreateUrl from './components/CreateUrl/CreateUrl'\nimport ExistingUrlContainer from './components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer'\nimport MediaQuery from 'react-responsive'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { setLoggedInState, setUserName, setUserId, setRegisteredState, setMobileNavState } from './redux/user/user.action'\nimport { selectUserLogInState, selectUserName, selectUserId, selectRegisteredState, selectMobileNavState } from './redux/user/user.selector'\nimport { setAnonUrlSubmit, setUrlError, setAnonUrlReturn, setUserUrls, setUrlOwner, setOriginalUrl, setCreateError } from './redux/url/url.action'\nimport { selectAnonUrlSubmit,selectUrlError, selectAnonUrlReturn, selectUserUrls, selectUrlOwner, selectOriginalUrl, selectCreateError } from './redux/url/url.selector'\nimport './App.css'\n\nconst App = (props) => {\n  const setLogIn = () => {\n    props.setLoggedInState(!props.selectUserLogInState)\n  };\n\n  const setRegistered = () => {\n    if (props.selectMobileNavState === false) {\n      props.setMobileNavState(!props.selectMobileNavState)\n    }\n    props.setRegisteredState(!props.selectRegisteredState)\n  }\n\n  const setUser = (username, userid) => {\n    props.setUserName(`${username}`)\n    props.setUserId(`${userid}`)\n    console.log(props.selectUserName)\n    console.log(props.selectUserId)\n  }\n\n  const getUserUrls = () => {\n    axios.get(`https://api.theoog.net/getallurls/${props.selectUserId}`)\n      .then((response) => {\n        props.setUserUrls(response.data.reverse())\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  const handleChange = (event) => {\n    props.setAnonUrlSubmit(event.target.value)\n  }\n\n  const checkValidUrl = (url) => {\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\n    const passCheck = regex.test(url)\n    if (passCheck === true) {\n      return passCheck\n    } else {\n      return false\n    }\n  }\n\n  const clickMobileNav = () => {\n    props.setMobileNavState(props.selectMobileNavState)\n  }\n\n  const submitAnon = (event) => {\n    event.preventDefault()\n    if (checkValidUrl(props.selectAnonUrlSubmit)) {\n      axios.post('https://api.theoog.net/', {\n        owner: props.selectUserid, // defaults to user 'anon'\n        originalurl: props.selectAnonUrlSubmit\n      })\n      .then((response) => {\n        props.setAnonUrlReturn(response.data[0])\n        props.setUrlError('')\n      })\n    } else {\n      props.setUrlError('**invalid url, must include http:// or https://')\n    }\n  }\n\n  let loggedInContent = () => (\n    <div className=\"logged-in-content\" test-data=\"logged-in-content\">\n      <div className=\"logged-in-header\">\n        <LogIn setLogIn={setLogIn} loggedIn={props.selectUserLogInState} setUser={setUser} getUserUrls={getUserUrls} activeUserName={props.selectUserName}/>\n      </div>\n      <CreateUrl getUserUrls={getUserUrls} username={props.selectUserName} userid={props.selectUserId}/>\n      <h1>{props.selectUserName}'s urls:</h1>\n      <ExistingUrlContainer urls={props.selectUserUrls}/>\n    </div>\n  );\n  const loggedOutContent = () => {\n    const anonUrl = (\n      <div>\n        <p>You wont have access to this URL if you make another or navigate away. Make sure to copy it now!</p>\n        <div className=\"original-url-container\">\n          <p>original url: <em>{props.selectAnonUrlReturn.originalurl}</em></p>\n        </div>\n        <div className=\"short-url-container\">\n          <p>your short url: <strong>theoog.net/#{props.selectAnonUrlReturn.id}</strong></p>\n          <button onClick={() => navigator.clipboard.writeText(`theoog.net/#${props.selectAnonUrlReturn.id}`)}>copy to clipboard</button>\n        </div>\n      </div>\n    );\n    const mobileNav = () => {\n      return props.selectMobileNavState === true ? (\n        // nav is open\n        <div className=\"mobile-nav-open\">\n          <div className=\"mobile-nav-icon-container\">\n            <i className=\"fa fa-close\" onClick={clickMobileNav}></i>\n          </div>\n          <Register setRegistered={setRegistered} registered={props.selectRegisteredState} setLogIn={setLogIn} setUser={setUser}/>\n          <LogIn setLogIn={setLogIn} loggedIn={props.selectUserLogInState} setUser={setUser} getUserUrls={getUserUrls} activeUserName={props.selectUserName}/>\n        </div>\n      ) : (\n        // nav is closed\n        <i className=\"fa fa-bars\" onClick={clickMobileNav}></i>\n      )\n    };\n    return (\n      <div className=\"logged-out-content\">\n        <div className=\"logged-out-header\">\n          <MediaQuery minDeviceWidth={500}>\n            <div className=\"header-login-register\">\n              <Register setRegistered={setRegistered} registered={props.selectRegisteredState} setLogIn={setLogIn} setUser={setUser}/>\n              <LogIn setLogIn={setLogIn} loggedIn={props.selectUserLogInState} setUser={setUser} getUserUrls={getUserUrls} activeUserName={props.selectUserName}/>\n            </div>\n          </MediaQuery>\n          <MediaQuery maxDeviceWidth={500}>\n            {mobileNav()}\n          </MediaQuery>\n        </div>\n        <img alt=\"\" src=\"./images/the_oog.png\"/>\n        <p>The Oog is a URL shortener</p>\n        <p>Try it out below or <span className=\"create-an-account-text\" onClick={setRegistered}>create an account</span> to have permanent access to your shortened URLs</p>\n        <form>\n          <input name=\"anonUrlSubmit\" className=\"long-input\" type=\"text\" placeholder=\"paste your url here, http or https required\" value={props.selectAnonUrlSubmit} onChange={handleChange}/>\n          <button onClick={submitAnon}>shorten</button>\n        </form>\n        <p className=\"url-validation-error\">{props.selectUrlError}</p>\n        {/* logged out, url has been shortened and returned */}\n        {props.selectAnonUrlReturn.length !== 0  ? anonUrl : null}\n      </div>\n    )\n  }\n  return (\n    <div className=\"App\">\n      {props.selectUserLogInState === true ? loggedInContent() : loggedOutContent()}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectUserLogInState:  selectUserLogInState(state),\n    selectUserName: selectUserName(state),\n    selectUserId: selectUserId(state),\n    selectRegisteredState: selectRegisteredState(state),\n    selectMobileNavState: selectMobileNavState(state),\n    selectAnonUrlSubmit: selectAnonUrlSubmit(state), \n    selectUrlError: selectUrlError(state),\n    selectAnonUrlReturn: selectAnonUrlReturn(state),\n    selectUserUrls: selectUserUrls(state),\n    selectUrlOwner: selectUrlOwner(state),\n    selectOriginalUrl: selectOriginalUrl(state),\n    selectCreateError: selectCreateError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLoggedInState: render => dispatch(setLoggedInState(render)),\n    setUserName: render => dispatch(setUserName(render)),\n    setUserId: render => dispatch(setUserId(render)),\n    setRegisteredState: render => dispatch(setRegisteredState(render)),\n    setMobileNavState: render => dispatch(setMobileNavState(render)),\n    setAnonUrlSubmit: render => dispatch(setAnonUrlSubmit(render)),\n    setUrlError: render => dispatch(setUrlError(render)),\n    setAnonUrlReturn: render => dispatch(setAnonUrlReturn(render)),\n    setUserUrls: render => dispatch(setUserUrls(render)),\n    setUrlOwner: render => dispatch(setUrlOwner(render)),\n    setOriginalUrl: render => dispatch(setOriginalUrl(render)),\n    setCreateError: render => dispatch(setCreateError(render))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setLoggedInState = bool => {\n  return {\n    type: 'SET_LOGGED_IN_STATE',\n    payload: bool\n  };\n};\n\nexport const setUserName = un => {\n  return {\n    type: 'SET_USER_NAME',\n    payload: un\n  };\n};\n\nexport const setUserId = id => {\n  return {\n    type: 'SET_USER_ID',\n    payload: id\n  };\n};\n\nexport const setRegisteredState = bool => {\n  return {\n    type: 'SET_REGISTERED_STATE',\n    payload: bool\n  };\n};\n\nexport const setMobileNavState = bool => {\n  return {\n    type: 'SET_MOBILE_NAV_STATE',\n    payload: bool\n  };\n};","const INITIAL_STATE = {\n  loggedIn: false,\n  username: \"anon\",\n  userid: '1',\n  registered: true,\n  mobileNavOpen: false\n};\n\nconst UserReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_LOGGED_IN_STATE':\n      return ({\n        ...state,\n        loggedIn: action.payload\n      });\n    case 'SET_USER_NAME':\n      return ({\n        ...state,\n        username: action.payload\n      });\n    case 'SET_USER_ID':\n      return ({\n        ...state,\n        userid: action.payload\n      });\n    case 'SET_REGISTERED_STATE':\n      return ({\n        ...state,\n        registered: action.payload\n      })\n    case 'SET_MOBILE_NAV_STATE':\n      return ({\n        ...state,\n        mobileNavOpen: action.payload\n      })\n    default:\n      return state;\n  };\n};\n\nexport default UserReducer;","const INITIAL_STATE = {\n  anonUrlSubmit: '',\n  urlError: '',\n  anonUrlReturn: [],\n  urls: [],\n  owner: '1',\n  originalurl: '',\n  validationError: ''\n};\n\nconst UrlReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_ANON_URL_SUBMIT':\n      return ({\n        ...state,\n        anonUrlSubmit: action.payload\n      });\n    case 'SET_URL_ERROR':\n      return ({\n        ...state,\n        urlError: action.payload\n      });\n    case 'SET_ANON_URL_RETURN':\n      return ({\n        ...state,\n        anonUrlReturn: action.payload\n      });\n    case 'SET_USER_URLS':\n      return ({\n        ...state,\n        urls: action.payload\n      });\n    case 'SET_URL_OWNER': \n      return ({\n        ...state,\n        owner: action.payload\n      });\n    case 'SET_ORIGINAL_URL':\n      return ({\n        ...state,\n        originalurl: action.payload\n      });\n    case 'SET_CREATE_ERROR':\n      return ({\n        ...state,\n        validationError: action.payload\n      });\n    default:\n      return state;\n  };\n};\n\nexport default UrlReducer;","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport UserReducer from './user/user.reducer'\nimport UrlReducer from './url/url.reducer'\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst rootReducer = combineReducers({\n  userState: UserReducer,\n  urlState: UrlReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./root-reducer\"\nimport logger from 'redux-logger'\nimport thunk from \"redux-thunk\"\n\nconst middlewares = [thunk];\nmiddlewares.push(logger)\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default { store };","import React from 'react'\nimport App from './App'\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nconst AppGateway = () => {\n\n  const getRedirect = () => {\n    const noHash = window.location.hash.substring(1)\n    axios.get(`https://api.theoog.net/${noHash}`)\n      .then((results) => {\n        window.location.href = results.data[0].originalurl\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  const directToAppOrRedirect = () => {\n    if (window.location.hash !== '') {\n      getRedirect()\n      return (\n        <div id=\"redirect-message\">you are being redirected</div>\n      )\n    } else if (window.location.hash === '') {\n      return (\n        <div>\n          <Provider store={store}>\n            <App />\n          </Provider>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>{directToAppOrRedirect()}</div>\n  )\n}\n\nexport default AppGateway","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppGateway from './AppGateway';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppGateway />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}