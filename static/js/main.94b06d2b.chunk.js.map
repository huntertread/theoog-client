{"version":3,"sources":["components/LogIn/LogIn.js","components/Register/Register.js","components/CreateUrl/CreateUrl.js","components/ExistingUrl/IndividualUrl/IndividualUrl.js","components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer.js","App.js","components/Footer/Footer.js","serviceWorker.js","index.js"],"names":["LogIn","props","state","username","password","validationMessage","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","axios","get","toLowerCase","then","results","undefined","data","md5","setUser","id","setLogIn","getAllUrls","catch","err","console","error","loggedIn","className","type","placeholder","onChange","onClick","Component","Register","passconfirm","email","emailconfirm","unError","emailError","pwError","post","registered","setRegistered","CreateUrl","owner","userid","originalurl","urlnickname","validationError","checkValidUrl","url","passCheck","RegExp","test","IndividualUrl","urlproperties","navigator","clipboard","writeText","ExistingUrlContainer","urls","map","i","key","App","createdAnon","anonUrlSubmit","urlError","anonUrlReturn","submitAnon","hashUrl","getRedirect","noHash","window","location","hash","substring","href","response","reverse","hashed","shorturl","content","activeUserName","anonUrl","length","alt","src","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.94b06d2b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport md5 from 'md5'\nimport axios from 'axios'\nimport './login.css'\n// import https from 'https'\n\n// axios.defaults.baseurl = \"https://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333\"\n// axios.defaults.baseurl = \"api.theoog.net:3333\"\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      validationMessage: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios.get(`https://api.theoog.net/getExistingUser/${this.state.username.toLowerCase()}`)\n      .then((results) => {\n        if (results.data[0] === undefined) {\n          this.setState({validationMessage: '**username or password is incorrect'})\n        } else if (results.data[0].password === md5(this.state.password)) {\n          this.props.setUser(results.data[0].username, results.data[0].id)\n          this.props.setLogIn()\n          this.props.getAllUrls()\n        } else {\n          this.setState({validationMessage: '**incorrect username or password'})\n        }\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  render() {\n    if (this.props.loggedIn === false) {\n      return(\n        <div className=\"login-container\">\n          <form>\n            <input name=\"username\" type=\"text\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange}/>\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            <button onClick={this.handleSubmit}>log in</button>\n          </form>\n          <p className=\"unpw-validation-error\">{this.state.validationMessage}</p>\n        </div>\n      )\n    } else if (this.props.loggedIn === true) {\n      return(\n        <div className=\"logout-container\">\n          {/* <p>{`hey there, ${this.props.activeUserName}!`}</p> */}\n          <button onClick={() => this.props.setLogIn()}>log out</button>\n        </div>\n      )\n    }\n  }\n}\n\nexport default LogIn","import React, { Component } from 'react'\nimport axios from 'axios'\nimport md5 from 'md5'\nimport './register.css'\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      passconfirm: '',\n      email: '',\n      emailconfirm: '',\n      unError: '',\n      emailError: '',\n      pwError: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    axios.get(`https://api.theoog.net/getExistingUser/${this.state.username.toLowerCase()}`)\n      .then((results) => {\n        if (results.data[0] === undefined) {\n          if (this.state.password === this.state.passconfirm) {\n            if (this.state.email === this.state.emailconfirm) {\n              axios.post('https://api.theoog.net/register', {\n                username: this.state.username.toLowerCase(),\n                password: md5(this.state.password),\n                email: this.state.email\n              })\n              .then((results) => {\n                this.props.setUser(results.data[0].username, results.data[0].id)\n                this.props.setLogIn()\n              })\n              .catch((err) => {\n                console.error(err)\n              })\n          } else {\n            this.setState({emailError: '**emails do not match'})\n            this.setState({pwError: ''})\n          }\n        } else {\n          this.setState({pwError: '**passwords do not match'})\n          this.setState({unError: ''})\n        }\n      } else {\n        this.setState({unError: `**sorry, ${this.state.username} is taken`})\n      }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n  }\n\n  render() {\n    if (this.props.registered === true) {\n      return (\n        <button className=\"register-button\" onClick={this.props.setRegistered}>register</button>\n      )\n    } else if (this.props.registered === false) {\n      return(\n        <div className=\"registration-form-container\">\n          <form className=\"registration-form-content\">\n            <h2>REGISTER</h2>\n            <input name=\"username\" type=\"text\" placeholder=\"desired username\" value={this.state.username} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.unError}</p>\n            <input name=\"email\" type=\"text\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange}/>\n            <input name=\"emailconfirm\" type=\"text\" placeholder=\"confirm email\" value={this.state.emailconfirm} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.emailError}</p>\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\n            <input name=\"passconfirm\" type=\"password\" placeholder=\"confirm password\" value={this.state.passconfirm} onChange={this.handleChange}/>\n            <p className=\"reg-error\">{this.state.pwError}</p>\n            <div className=\"register-button-container\">\n              <button className=\"registration-button\" onClick={this.handleSubmit}>submit</button>\n              <button className=\"registration-button\" onClick={this.props.setRegistered}>cancel</button>\n            </div>\n          </form>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './createurl.css'\n\nclass CreateUrl extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      owner: this.props.userid,\n      originalurl: '',\n      urlnickname: '',\n      validationError: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.checkValidUrl = this.checkValidUrl.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  checkValidUrl(url) {\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\n    const passCheck = regex.test(url)\n    if (passCheck === true) {\n      return passCheck\n    } else {\n      return false\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.checkValidUrl(this.state.originalurl)) {\n      axios.post('https://api.theoog.net/', {\n        owner: this.state.owner,\n        originalurl: this.state.originalurl\n        // urlnickname: this.state.urlnickname\n      })\n      .then((results) => {\n        // attach new record to user table under urls array\n        this.setState({validationError: ''})\n        this.props.getAllUrls()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n    } else {\n      this.setState({validationError: '**invalid url, must use http or https'})\n    }\n  }\n\n  render() {\n    return(\n      <div>\n      <div className=\"create-url-container\">\n        <form>\n        <input type=\"text\" name=\"originalurl\" placeholder=\"paste your url here, http or https required\" value={this.state.originalurl} onChange={this.handleChange}/>\n        {/* <input type=\"text\" name=\"urlnickname\" value={this.state.urlnickname} onChange={this.handleChange}/> */}\n        <button onClick={this.handleSubmit}>shorten</button>\n        </form>\n      </div>\n      <p className=\"create-url-error\">{this.state.validationError}</p>\n      </div>\n    )\n  }\n}\n\nexport default CreateUrl","import React from 'react'\nimport './individualurl.css'\n\nconst IndividualUrl = ({ urlproperties }) => {\n  return(\n    <div className=\"individual-url\">\n      <div className=\"original-url-container\">\n        <p>original url: <em>{urlproperties.originalurl}</em></p>\n      </div>\n      <div className=\"short-url-container\">\n        <p>short url: <strong>theoog.net/#{urlproperties.id}</strong></p>\n        {/* <p>{urlproperties.urlnickname}</p> */}\n        <button className=\"copy-button\" onClick={() => navigator.clipboard.writeText(`theoog.net/#${urlproperties.id}`)}>copy to clipboard</button>\n      </div>\n    </div>\n  )\n}\n\nexport default IndividualUrl","import React from 'react'\nimport './existingurlcontainer.css'\nimport IndividualUrl from '../IndividualUrl/IndividualUrl.js'\n\nconst ExistingUrlContainer = ({ urls }) => {\n  return(\n    <div className=\"existing-url-container\">\n      {\n        urls.map((urlproperties, i) => <IndividualUrl key={i} urlproperties={urlproperties} />)\n      }\n    </div>\n  )\n}\n\nexport default ExistingUrlContainer","import React, { Component } from 'react'\nimport LogIn from './components/LogIn/LogIn.js'\nimport Register from './components/Register/Register.js'\nimport CreateUrl from './components/CreateUrl/CreateUrl.js'\nimport ExistingUrlContainer from './components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer.js'\nimport Footer from './components/Footer/Footer.js'\nimport axios from 'axios'\nimport md5 from 'md5'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      username: 'anon',\n      userid: '1',\n      registered: true,\n      createdAnon: false,\n      anonUrlSubmit: '',\n      urlError: '',\n      anonUrlReturn: [],\n      urls: []\n    }\n    this.setLogIn = this.setLogIn.bind(this)\n    this.setRegistered = this.setRegistered.bind(this)\n    this.setUser = this.setUser.bind(this)\n    this.getAllUrls = this.getAllUrls.bind(this)\n    this.submitAnon = this.submitAnon.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.hashUrl = this.hashUrl.bind(this)\n    this.getRedirect = this.getRedirect.bind(this)\n    this.checkValidUrl = this.checkValidUrl.bind(this)\n  }\n\n  setLogIn() {\n    this.setState({loggedIn: !this.state.loggedIn})\n  }\n\n  setRegistered() {\n    this.setState({registered: !this.state.registered})\n  }\n\n  setUser(username, userid) {\n    this.setState({username: username, userid: userid})\n  }\n\n  getRedirect() {\n    const noHash = window.location.hash.substring(1)\n    axios.get(`https://api.theoog.net/${noHash}`)\n      .then((results) => {\n        window.location.href = results.data[0].originalurl\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  getAllUrls() {\n    axios.get(`https://api.theoog.net/getallurls/${this.state.userid}`)\n      .then((response) => {\n        this.setState({urls: response.data.reverse()})\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  hashUrl(url) {\n    var hashed = md5(url)\n    return hashed\n  }\n\n  checkValidUrl(url) {\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\n    const passCheck = regex.test(url)\n    if (passCheck === true) {\n      return passCheck\n    } else {\n      return false\n    }\n  }\n\n  submitAnon(event) {\n    event.preventDefault()\n    if (this.checkValidUrl(this.state.anonUrlSubmit)) {\n      var hashed = this.hashUrl(this.state.anonUrlSubmit)\n      axios.post('https://api.theoog.net/', {\n        owner: this.state.userid,\n        originalurl: this.state.anonUrlSubmit,\n        shorturl: hashed\n      })\n      .then((response) => {\n        this.setState({anonUrlReturn: response.data[0]})\n        this.setState({urlError: ''})\n      })\n    } else {\n      this.setState({urlError: '**invalid url, must include http:// or https://'})\n    }\n  }\n\n  componentDidMount() {\n    if (window.location.hash !== '') {\n      this.getRedirect()\n    }\n  }\n\n  render() {\n    let content;\n    if (this.state.loggedIn === true) {\n      content =\n        <div className=\"logged-in-content\">\n          <div className=\"logged-in-header\">\n            <LogIn setLogIn={this.setLogIn} loggedIn={this.state.loggedIn} setUser={this.setUser} getAllUrls={this.getAllUrls} activeUserName={this.state.username}/>\n          </div>\n          <CreateUrl getAllUrls={this.getAllUrls} username={this.state.username} userid={this.state.userid}/>\n          <h1>{this.state.username}'s urls:</h1>\n          <ExistingUrlContainer urls={this.state.urls}/>\n        </div>\n    } else if (this.state.loggedIn === false) {\n      let anonUrl\n      if (this.state.anonUrlReturn.length !== 0) {\n        anonUrl =\n        <div>\n          <p>You wont have access to this URL if you make another or navigate away. Make sure to copy it now!</p>\n          <div className=\"original-url-container\">\n            <p>original url: <em>{this.state.anonUrlReturn.originalurl}</em></p>\n          </div>\n          <div className=\"short-url-container\">\n            <p>your short url: <strong>theoog.net/#{this.state.anonUrlReturn.id}</strong></p>\n            <button onClick={() => navigator.clipboard.writeText(`theoog.net/#${this.state.anonUrlReturn.id}`)}>copy to clipboard</button>\n          </div>\n        </div>\n      }\n      content =\n        <div className=\"logged-out-content\">\n          <div className=\"logged-out-header\">\n            {/* <div className=\"header-logo\">\n              <p>THE OOG</p>\n            </div> */}\n            <div className=\"header-login-register\">\n              <Register setRegistered={this.setRegistered} registered={this.state.registered} setLogIn={this.setLogIn} setUser={this.setUser}/>\n              <LogIn setLogIn={this.setLogIn} loggedIn={this.state.loggedIn} setUser={this.setUser} getAllUrls={this.getAllUrls} activeUserName={this.state.username}/>\n            </div>\n          </div>\n          <img alt=\"\" src=\"./images/the_oog.png\"/>\n          <p>The Oog is a URL shortener.</p>\n          <p>Try it out!</p>\n          <form>\n          <input name=\"anonUrlSubmit\" className=\"long-input\" type=\"text\" placeholder=\"paste your url here, http or https required\" value={this.state.anonUrlSubmit} onChange={this.handleChange}/>\n          <button onClick={this.submitAnon}>shorten</button>\n          </form>\n          <p className=\"url-validation-error\">{this.state.urlError}</p>\n          {anonUrl}\n        </div>\n    }\n\n    return (\n      <div className=\"App\">\n        {content}\n        {/* <Footer /> */}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport './footer.css'\n\nclass Footer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isOpen: false\n    }\n    this.setIsOpen = this.setIsOpen.bind(this)\n  }\n\n  setIsOpen() {\n    this.setState({isOpen: !this.state.isOpen})\n  }\n\n  render() {\n    if (this.state.isOpen === false) {\n      return(\n        <div className=\"footer-container\">\n          <button onClick={this.setIsOpen}>about</button>\n        </div>\n      )\n    } else if (this.state.isOpen === true) {\n      return(\n        <div className=\"footer-container\">\n          <button onClick={this.setIsOpen}>close</button>\n          <h3>The Oog is a personal project developed by Hunter Treadaway</h3>\n          <h3>Learn more about this project and Hunter's other work by visiting <a href=\"https://huntertread.com/#project-section\" target=\"blank\">huntertread.com</a></h3>\n          <h3>Get in touch with Hunter at huntertread@gmail.com</h3>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Footer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}