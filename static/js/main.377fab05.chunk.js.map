{"version":3,"sources":["components/LogIn/LogIn.js","components/Register/Register.js","components/CreateUrl/CreateUrl.js","components/ExistingUrl/IndividualUrl/IndividualUrl.js","components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer.js","App.js","components/Footer/Footer.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseurl","LogIn","props","state","username","password","validationMessage","handleChange","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","get","toLowerCase","then","results","undefined","data","md5","setUser","id","setLogIn","getAllUrls","catch","err","console","error","loggedIn","className","type","placeholder","onChange","onClick","Component","Register","passconfirm","email","emailconfirm","unError","emailError","pwError","post","registered","setRegistered","CreateUrl","owner","userid","originalurl","urlnickname","validationError","checkValidUrl","url","passCheck","RegExp","test","IndividualUrl","urlproperties","navigator","clipboard","writeText","ExistingUrlContainer","urls","map","i","key","App","createdAnon","anonUrlSubmit","urlError","anonUrlReturn","submitAnon","hashUrl","getRedirect","noHash","window","location","hash","substring","href","response","reverse","hashed","shorturl","content","activeUserName","anonUrl","length","alt","src","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.377fab05.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport md5 from 'md5'\r\nimport axios from 'axios'\r\nimport './login.css'\r\n\r\naxios.defaults.baseurl = \"https://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333\"\r\n\r\nclass LogIn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      validationMessage: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios.get(`http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/getExistingUser/${this.state.username.toLowerCase()}`)\r\n      .then((results) => {\r\n        if (results.data[0] === undefined) {\r\n          this.setState({validationMessage: '**username or password is incorrect'})\r\n        } else if (results.data[0].password === md5(this.state.password)) {\r\n          this.props.setUser(results.data[0].username, results.data[0].id)\r\n          this.props.setLogIn()\r\n          this.props.getAllUrls()\r\n        } else {\r\n          this.setState({validationMessage: '**incorrect username or password'})\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.loggedIn === false) {\r\n      return(\r\n        <div className=\"login-container\">\r\n          <form>\r\n            <input name=\"username\" type=\"text\" placeholder=\"username\" value={this.state.username} onChange={this.handleChange}/>\r\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n            <button onClick={this.handleSubmit}>log in</button>\r\n          </form>\r\n          <p className=\"unpw-validation-error\">{this.state.validationMessage}</p>\r\n        </div>\r\n      )\r\n    } else if (this.props.loggedIn === true) {\r\n      return(\r\n        <div className=\"logout-container\">\r\n          {/* <p>{`hey there, ${this.props.activeUserName}!`}</p> */}\r\n          <button onClick={() => this.props.setLogIn()}>log out</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogIn","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport md5 from 'md5'\r\nimport './register.css'\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      passconfirm: '',\r\n      email: '',\r\n      emailconfirm: '',\r\n      unError: '',\r\n      emailError: '',\r\n      pwError: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    axios.get(`http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/getExistingUser/${this.state.username.toLowerCase()}`)\r\n      .then((results) => {\r\n        if (results.data[0] === undefined) {\r\n          if (this.state.password === this.state.passconfirm) {\r\n            if (this.state.email === this.state.emailconfirm) {\r\n              axios.post('http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/register', {\r\n                username: this.state.username.toLowerCase(),\r\n                password: md5(this.state.password),\r\n                email: this.state.email\r\n              })\r\n              .then((results) => {\r\n                this.props.setUser(results.data[0].username, results.data[0].id)\r\n                this.props.setLogIn()\r\n              })\r\n              .catch((err) => {\r\n                console.error(err)\r\n              })\r\n          } else {\r\n            this.setState({emailError: '**emails do not match'})\r\n            this.setState({pwError: ''})\r\n          }\r\n        } else {\r\n          this.setState({pwError: '**passwords do not match'})\r\n          this.setState({unError: ''})\r\n        }\r\n      } else {\r\n        this.setState({unError: `**sorry, ${this.state.username} is taken`})\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.registered === true) {\r\n      return (\r\n        <button className=\"register-button\" onClick={this.props.setRegistered}>register</button>\r\n      )\r\n    } else if (this.props.registered === false) {\r\n      return(\r\n        <div className=\"registration-form-container\">\r\n          <form className=\"registration-form-content\">\r\n            <h2>REGISTER</h2>\r\n            <input name=\"username\" type=\"text\" placeholder=\"desired username\" value={this.state.username} onChange={this.handleChange}/>\r\n            <p className=\"reg-error\">{this.state.unError}</p>\r\n            <input name=\"email\" type=\"text\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n            <input name=\"emailconfirm\" type=\"text\" placeholder=\"confirm email\" value={this.state.emailconfirm} onChange={this.handleChange}/>\r\n            <p className=\"reg-error\">{this.state.emailError}</p>\r\n            <input name=\"password\" type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n            <input name=\"passconfirm\" type=\"password\" placeholder=\"confirm password\" value={this.state.passconfirm} onChange={this.handleChange}/>\r\n            <p className=\"reg-error\">{this.state.pwError}</p>\r\n            <div className=\"register-button-container\">\r\n              <button className=\"registration-button\" onClick={this.handleSubmit}>submit</button>\r\n              <button className=\"registration-button\" onClick={this.props.setRegistered}>cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './createurl.css'\r\n\r\nclass CreateUrl extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      owner: this.props.userid,\r\n      originalurl: '',\r\n      urlnickname: '',\r\n      validationError: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.checkValidUrl = this.checkValidUrl.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  checkValidUrl(url) {\r\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\r\n    const passCheck = regex.test(url)\r\n    if (passCheck === true) {\r\n      return passCheck\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.checkValidUrl(this.state.originalurl)) {\r\n      axios.post('http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/', {\r\n        owner: this.state.owner,\r\n        originalurl: this.state.originalurl\r\n        // urlnickname: this.state.urlnickname\r\n      })\r\n      .then((results) => {\r\n        // attach new record to user table under urls array\r\n        this.setState({validationError: ''})\r\n        this.props.getAllUrls()\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n    } else {\r\n      this.setState({validationError: '**invalid url, must use http or https'})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n      <div className=\"create-url-container\">\r\n        <form>\r\n        <input type=\"text\" name=\"originalurl\" placeholder=\"paste your url here, http or https required\" value={this.state.originalurl} onChange={this.handleChange}/>\r\n        {/* <input type=\"text\" name=\"urlnickname\" value={this.state.urlnickname} onChange={this.handleChange}/> */}\r\n        <button onClick={this.handleSubmit}>shorten</button>\r\n        </form>\r\n      </div>\r\n      <p className=\"create-url-error\">{this.state.validationError}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateUrl","import React from 'react'\r\nimport './individualurl.css'\r\n\r\nconst IndividualUrl = ({ urlproperties }) => {\r\n  return(\r\n    <div className=\"individual-url\">\r\n      <div className=\"original-url-container\">\r\n        <p>original url: <em>{urlproperties.originalurl}</em></p>\r\n      </div>\r\n      <div className=\"short-url-container\">\r\n        <p>short url: <strong>theoog.net/#{urlproperties.id}</strong></p>\r\n        {/* <p>{urlproperties.urlnickname}</p> */}\r\n        <button className=\"copy-button\" onClick={() => navigator.clipboard.writeText(`theoog.net/#${urlproperties.id}`)}>copy to clipboard</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IndividualUrl","import React from 'react'\r\nimport './existingurlcontainer.css'\r\nimport IndividualUrl from '../IndividualUrl/IndividualUrl.js'\r\n\r\nconst ExistingUrlContainer = ({ urls }) => {\r\n  return(\r\n    <div className=\"existing-url-container\">\r\n      {\r\n        urls.map((urlproperties, i) => <IndividualUrl key={i} urlproperties={urlproperties} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExistingUrlContainer","import React, { Component } from 'react'\r\nimport LogIn from './components/LogIn/LogIn.js'\r\nimport Register from './components/Register/Register.js'\r\nimport CreateUrl from './components/CreateUrl/CreateUrl.js'\r\nimport ExistingUrlContainer from './components/ExistingUrl/ExistingUrlContainer/ExistingUrlContainer.js'\r\nimport Footer from './components/Footer/Footer.js'\r\nimport axios from 'axios'\r\nimport md5 from 'md5'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loggedIn: false,\r\n      username: 'anon',\r\n      userid: '1',\r\n      registered: true,\r\n      createdAnon: false,\r\n      anonUrlSubmit: '',\r\n      urlError: '',\r\n      anonUrlReturn: [],\r\n      urls: []\r\n    }\r\n    this.setLogIn = this.setLogIn.bind(this)\r\n    this.setRegistered = this.setRegistered.bind(this)\r\n    this.setUser = this.setUser.bind(this)\r\n    this.getAllUrls = this.getAllUrls.bind(this)\r\n    this.submitAnon = this.submitAnon.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.hashUrl = this.hashUrl.bind(this)\r\n    this.getRedirect = this.getRedirect.bind(this)\r\n    this.checkValidUrl = this.checkValidUrl.bind(this)\r\n  }\r\n\r\n  setLogIn() {\r\n    this.setState({loggedIn: !this.state.loggedIn})\r\n  }\r\n\r\n  setRegistered() {\r\n    this.setState({registered: !this.state.registered})\r\n  }\r\n\r\n  setUser(username, userid) {\r\n    this.setState({username: username, userid: userid})\r\n  }\r\n\r\n  getRedirect() {\r\n    const noHash = window.location.hash.substring(1)\r\n    axios.get(`http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/${noHash}`)\r\n      .then((results) => {\r\n        // console.log(noHash)\r\n        // console.log(results.data)\r\n        window.location.href = results.data[0].originalurl\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  getAllUrls() {\r\n    axios.get(`http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/getallurls/${this.state.userid}`)\r\n      .then((response) => {\r\n        this.setState({urls: response.data.reverse()})\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value})\r\n  }\r\n\r\n  hashUrl(url) {\r\n    var hashed = md5(url)\r\n    return hashed\r\n  }\r\n\r\n  checkValidUrl(url) {\r\n    const regex = RegExp('((https|http)://)((\\\\w|-)+)(([.]|[/])((\\\\w|-)+))+')\r\n    const passCheck = regex.test(url)\r\n    if (passCheck === true) {\r\n      return passCheck\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  submitAnon(event) {\r\n    event.preventDefault()\r\n    if (this.checkValidUrl(this.state.anonUrlSubmit)) {\r\n      var hashed = this.hashUrl(this.state.anonUrlSubmit)\r\n      axios.post('http://ec2-54-151-33-195.us-west-1.compute.amazonaws.com:3333/', {\r\n        owner: this.state.userid,\r\n        originalurl: this.state.anonUrlSubmit,\r\n        shorturl: hashed\r\n      })\r\n      .then((response) => {\r\n        this.setState({anonUrlReturn: response.data[0]})\r\n        this.setState({urlError: ''})\r\n      })\r\n    } else {\r\n      this.setState({urlError: '**invalid url, must include http:// or https://'})\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.location.hash !== '') {\r\n      this.getRedirect()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    if (this.state.loggedIn === true) {\r\n      content =\r\n        <div className=\"logged-in-content\">\r\n          <div className=\"logged-in-header\">\r\n            <LogIn setLogIn={this.setLogIn} loggedIn={this.state.loggedIn} setUser={this.setUser} getAllUrls={this.getAllUrls} activeUserName={this.state.username}/>\r\n          </div>\r\n          <CreateUrl getAllUrls={this.getAllUrls} username={this.state.username} userid={this.state.userid}/>\r\n          <h1>{this.state.username}'s urls:</h1>\r\n          <ExistingUrlContainer urls={this.state.urls}/>\r\n        </div>\r\n    } else if (this.state.loggedIn === false) {\r\n      let anonUrl\r\n      if (this.state.anonUrlReturn.length !== 0) {\r\n        anonUrl =\r\n        <div>\r\n          <p>You wont have access to this URL if you make another or navigate away. Make sure to copy it now!</p>\r\n          <div className=\"original-url-container\">\r\n            <p>original url: <em>{this.state.anonUrlReturn.originalurl}</em></p>\r\n          </div>\r\n          <div className=\"short-url-container\">\r\n            <p>your short url: <strong>theoog.net/#{this.state.anonUrlReturn.id}</strong></p>\r\n            <button onClick={() => navigator.clipboard.writeText(`theoog.net/#${this.state.anonUrlReturn.id}`)}>copy to clipboard</button>\r\n          </div>\r\n        </div>\r\n      }\r\n      content =\r\n        <div className=\"logged-out-content\">\r\n          <div className=\"logged-out-header\">\r\n            {/* <div className=\"header-logo\">\r\n              <p>THE OOG</p>\r\n            </div> */}\r\n            <div className=\"header-login-register\">\r\n              <Register setRegistered={this.setRegistered} registered={this.state.registered} setLogIn={this.setLogIn} setUser={this.setUser}/>\r\n              <LogIn setLogIn={this.setLogIn} loggedIn={this.state.loggedIn} setUser={this.setUser} getAllUrls={this.getAllUrls} activeUserName={this.state.username}/>\r\n            </div>\r\n          </div>\r\n          <img alt=\"\" src=\"./images/the_oog.png\"/>\r\n          <p>The Oog is a URL shortener.</p>\r\n          <p>Try it out!</p>\r\n          <form>\r\n          <input name=\"anonUrlSubmit\" className=\"long-input\" type=\"text\" placeholder=\"paste your url here, http or https required\" value={this.state.anonUrlSubmit} onChange={this.handleChange}/>\r\n          <button onClick={this.submitAnon}>shorten</button>\r\n          </form>\r\n          <p className=\"url-validation-error\">{this.state.urlError}</p>\r\n          {anonUrl}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {content}\r\n        {/* <Footer /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport './footer.css'\r\n\r\nclass Footer extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n    this.setIsOpen = this.setIsOpen.bind(this)\r\n  }\r\n\r\n  setIsOpen() {\r\n    this.setState({isOpen: !this.state.isOpen})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isOpen === false) {\r\n      return(\r\n        <div className=\"footer-container\">\r\n          <button onClick={this.setIsOpen}>about</button>\r\n        </div>\r\n      )\r\n    } else if (this.state.isOpen === true) {\r\n      return(\r\n        <div className=\"footer-container\">\r\n          <button onClick={this.setIsOpen}>close</button>\r\n          <h3>The Oog is a personal project developed by Hunter Treadaway</h3>\r\n          <h3>Learn more about this project and Hunter's other work by visiting <a href=\"https://huntertread.com/#project-section\" target=\"blank\">huntertread.com</a></h3>\r\n          <h3>Get in touch with Hunter at huntertread@gmail.com</h3>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Footer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}